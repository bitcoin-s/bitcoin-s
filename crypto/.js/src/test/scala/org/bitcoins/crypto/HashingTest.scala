package org.bitcoins.crypto

import org.scalatest.flatspec.AnyFlatSpec
import org.scalatest.matchers.must.Matchers
import scodec.bits.ByteVector

class HashingTest extends AnyFlatSpec with Matchers {

  private lazy val lines = Vector(
    "a4f1594e6fd860d0d46839a05444758fa16b08779f563caf28b865ac0d170766,799ec1d5ed9a86e33b4d3522a6368e3b9a54647e,c9c9cd05d54505fdcd85f4392592a08faad2edd0cc5115eda9f00f3380db7400,b777cfc9a98303f084e1902cead319c2ca025ce5,6ce46a129df04f9d0f562bdeaa446bdc17e17e31",
    "88baf031527da46a8274d5e6483e694bff7d7719b077974cdbf9451828cbb4a9,aadc8d2d25d6893761cc5e7532a1cb109c684c15,68572bd4640175b7dd462b8724668d470077811480652656ec6dfbb4b8cfd52d,f4cb964fb4ea8d8c7e9914ea2f87b18f8791d2f3,61f72be55ec6edb15db2f7e59c6a2d608715f1b9",
    "47974a7632b4d584b48f7dd98fcabef375ae9149a65d8c7994d2224f936546ad,92aa1b6dc2c37ee33fd3c44a653c874d50938bb4,71ce96804e75184acea587c20a7dc16ac1854a41e9f3449c67ef5aa191b8482f,a645464f7e5df11714ba086e0a6f60fa0cc3b811,fc574bea4db38c054fd61b28320f2eb2217169d5",
    "e11ea79168f6a912e48c2506d9f84c2a38f3ee3edd16a3cf1f2ec52935399fe9,8b7037de2677464b3fbc7df02abd214fed1d09bf,40d2655296fdeaabec4c702822386b479116ef2c5bfe36b863e3c230562f1fd6,f7dfd806e2f7be97b09dd395e92eb2cfba8f1129,e4dfe1aa3cc4f085313baa711d9d77964658cb9f",
    "fe12cdca437ebded4fe8dd0bf2321f5253d9e311e72106bf57c08e0552c384b9,c0d38806d527846d3d7060f4deafe9e4f3c7fd06,df49914be0042ccb09411de028fa9f059c2ce859dfd6e1aec98598b1dfbf5b1e,06673d673694c8dc562278d420f2f4571863e4cb,169acfe47ff070e16110a972b8dc187a60c048ca",
    "bbe39ef686f206e56b1aaa704029c8e7b410da5dfc5331d1bd89c0042101d8ff,2d20ae4c62d265595bf60881c1474d5f6c345494,3f22b5a68f2436aa51c392aa070a60ab8ac991b5c495a782f555d85622c703af,8d8692f1d4a2ebc1c05fd3e298d9a8ab9bb4d320,5ff6bf2046a9acfdcea0e009c0cdb19abe914bfc",
    "96057dfeaccda6d855aab1629a0d5ed2518962280bb776f8149f172826bf7bf4,96ed57fc707c4d080efa78c6c203c1580f637f59,0b4d8b41bf7f52d160b0adfebcd791330a1399ac2cec5129a78a89afd56f3411,ef4e113944e293b26af04baf30a32cb86a08377b,25245f972c2f2ee18a9385fc24a5490e71e445e8",
    "c8782916bef373dfaabe748a4e1be4cba65887de718ad0bd8f19a922cd8dc7b2,5f009cb27898b26c3c4b5476ac2a9f9385534fde,2870d609cf1b8baa3457619cb34dd5106271d669f4fb0a63ba948d667d2a738b,a0618334781103d24768703fe4cf5dd8860b6f02,ab2f5ef2312e8bd1731289b410d567caa9760204",
    "22b5982e2b416ac0f7f8a22824231c605870ddd512caf226d622c90921b973cd,6b7ffefd1149ff8d28eb17b744ea03dc24d622c7,40519071468f9a44afabb22e6342bf75df74cbc5e325a436a932f30182445662,fabf12d396cc150280c547ed5b5533a6d0a37a2d,e6b3691637bb7d4b2592c46f1d41c3ee8bcf837c",
    "5856f3faaf296058749dd71a79034cacc60d798d4e5e9eb52ef7a11e7f8441fa,a24607c6df6d1bfd36aca5914203ca8555948dba,9ce3fb9219eb57df1e968b5389127e0ee7d0aba44589aed75addf38def7d66ce,8c3fcc069587a3e1549c8ce5f2829d197f298970,7eb3624d0797aac8672b81f08e0eaef66eb6adae",
    "3ccfdfa068dd8e8873728daafe97bbd2af3a48a6d156ae62ae4adb38b5f81c42,a40105fbe998ba719a4691abe6a42b8d0c54b1ca,7a5b25254eb777dad171556b1abd6646bddeddf0be11eb46e046ddf3ae44dc17,4bdf02f3842be4fb19e71505078abd7ec4fd86aa,9e6113c67e935ebb33cd7f7672420f5b7616d39a",
    "ee8c7bc4abfa2c358d9459b552b9dc51336a0fe05eed1789b1693717e2031b41,9297ebd22c6a06f4aefdda632b03c462e1ca4c0e,58f3010ebab63bc6c164d77a7c4a492c9c17556e2ca42f93b6864d10f3f5abb2,8cdd07d2b536a919aed47d2e2e6f9fac386e0eb8,7467e8fffc7d67b8a6b82ca1837c54a571ca52b4",
    "c434e618af7a12aa2fa0927e06616f6b3cb3eea641bea592fd29d242cb5158ff,bd1984493b8fa6c68c118062645a50f1ae14d726,3b89572b2c8323d4dc156ff15599ee0a1937995b237e9b55063398c90f2f9f8d,6ca3b77ca6247c8c24227dfd64430824d94fe59d,5873caaeb88fdae10485dbb10d69d5b7dc63d9af",
    "88e3b3fb5b80661db532de1444a426b47c17aaa76fee8d762907d0a3d62707f4,f74af3600d1fb3c3fba2be5dd6f0be2830831005,c2b8dc8050905d861cbc3412dba00b14c4b8d8d7ca103fbacb8d112ffa8ac896,c6edd9512323904a6e717cf68f6173fa73592288,2fabcf69908f7c22ddcaa5093e788ad4f58ee3e0",
    "8820fc59b28ed62f055113fd70caf1f6b0dd0fc08e48ee6214426e9896a4bd6c,230841d49922cde8680e65147521fd2afab7dfd5,493c3bf1bf3dcd087f82c9d6cd6339cf88f969d69424521502c2c9c420e2beca,876c77f2b0e896c171b46bd73a68988ae667ebf7,b36ea97991471d7976c65a34146123bee4a06f61",
    "d1ec9240931d6a525fd59a7524b5993512a920dfb6b67df65f39bb7196fa9d28,ad9e9c770d1d5c1921098ae3b735a98eec821138,efdbfa6b2fd186b1dfedd3be4324e8039318854f8d65c62c0cb235b233b37b4c,5d76d6652073b7513ffe5f13492c1b5aad0b8fb0,c0d21cac8809321c51322f87f4cc749e02376c25"
  )

  private lazy val hashes = lines.map { line =>
    val arr = line.split(",")
    val data = ByteVector.fromValidHex(arr(0))
    val sha1 = Sha1Digest.fromHex(arr(1))
    val sha256 = Sha256Digest.fromHex(arr(2))
    val ripeMd160 = RipeMd160Digest.fromHex(arr(3))
    val sha256Hash160 = Sha256Hash160Digest.fromHex(arr(4))
    (data, sha1, sha256, ripeMd160, sha256Hash160)
  }

  it should "compute sha1" in {
    val expected = hashes.map(_._2)
    val actual = hashes.map(_._1).map(BCryptoCryptoRuntime.sha1)
    assert(actual == expected)
  }

  it should "compute sha256" in {
    val expected = hashes.map(_._3)
    val actual = hashes.map(_._1).map(BCryptoCryptoRuntime.sha256)
    assert(actual == expected)
  }

  it should "compute ripemd160" in {
    val expected = hashes.map(_._4)
    val actual = hashes.map(_._1).map(BCryptoCryptoRuntime.ripeMd160)
    assert(actual == expected)
  }

  it should "compute sha256hash160" in {
    val expected = hashes.map(_._5)
    val actual = hashes.map(_._1).map(BCryptoCryptoRuntime.sha256Hash160)
    assert(actual == expected)
  }

}
