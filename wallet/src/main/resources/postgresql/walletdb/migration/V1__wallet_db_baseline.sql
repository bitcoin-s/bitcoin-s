CREATE TABLE wallet_accounts (hd_purpose INTEGER NOT NULL,xpub VARCHAR(254) NOT NULL,coin INTEGER NOT NULL,account_index INTEGER NOT NULL,constraint pk_account primary key(hd_purpose,coin,account_index));

CREATE TABLE addresses (hd_purpose INTEGER NOT NULL,account_index INTEGER NOT NULL,hd_coin INTEGER NOT NULL,hd_chain_type INTEGER NOT NULL,address VARCHAR(254) PRIMARY KEY NOT NULL,script_witness VARCHAR(254),script_pub_key VARCHAR(254) NOT NULL UNIQUE,address_index INTEGER NOT NULL,pubkey VARCHAR(254) NOT NULL,hashed_pubkey VARCHAR(254) NOT NULL,script_type VARCHAR(254) NOT NULL,constraint fk_account foreign key(hd_purpose,hd_coin,account_index) references wallet_accounts(hd_purpose,coin,account_index) on update NO ACTION on delete NO ACTION);

CREATE TABLE tx_table (id SERIAL PRIMARY KEY,txIdBE VARCHAR(254) NOT NULL UNIQUE,transaction VARCHAR(254) NOT NULL,unsignedTxIdBE VARCHAR(254) NOT NULL,unsignedTx VARCHAR(254) NOT NULL,wTxIdBE VARCHAR(254),totalOutput INTEGER NOT NULL,numInputs INTEGER NOT NULL,numOutputs INTEGER NOT NULL,locktime INTEGER NOT NULL);

CREATE TABLE wallet_incoming_txs (id SERIAL PRIMARY KEY,txIdBE VARCHAR(254) NOT NULL UNIQUE,incomingAmount INTEGER NOT NULL,constraint fk_underlying_tx foreign key(txIdBE) references tx_table(txIdBE) on update NO ACTION on delete NO ACTION);

CREATE TABLE wallet_outgoing_txs (id SERIAL PRIMARY KEY,txIdBE VARCHAR(254) NOT NULL UNIQUE,inputAmount INTEGER NOT NULL,sentAmount INTEGER NOT NULL,actualFee INTEGER NOT NULL,expectedFee INTEGER NOT NULL,feeRate INTEGER NOT NULL,constraint fk_underlying_tx foreign key(txIdBE) references tx_table(txIdBE) on update NO ACTION on delete NO ACTION);

CREATE TABLE txo_spending_info (id SERIAL PRIMARY KEY,tx_outpoint VARCHAR(254) NOT NULL, script_pub_key VARCHAR(254) NOT NULL,value INTEGER NOT NULL,hd_privkey_path VARCHAR(254) NOT NULL,redeem_script VARCHAR(254),script_witness VARCHAR(254),txid VARCHAR(254) NOT NULL,block_hash VARCHAR(254), txo_state VARCHAR(254) NOT NULL, constraint fk_scriptPubKey foreign key(script_pub_key) references addresses(script_pub_key), constraint fk_incoming_txId foreign key(txid) references wallet_incoming_txs(txIdBE) on update NO ACTION on delete NO ACTION);
