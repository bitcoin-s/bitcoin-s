akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  # log-config-on-start = on

  actor {
    debug {
      # enable function of LoggingReceive, which is to log any received message at
      # DEBUG level
      receive = on

      # enable DEBUG logging of unhandled messages
      unhandled = on

      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = on
    }
  }
}

databaseUrl {
  dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
  profile = "slick.jdbc.PostgresProfile$"
  db {
    driver="org.postgresql.Driver"

    driver="org.postgresql.Driver"
    url="jdbc:postgresql://localhost:5432/bitcoin-s-node"
    username = "bitcoin-s-node-admin"
  }
}

testNet3DatabaseUrl {
  dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
  profile = "slick.jdbc.PostgresProfile$"
  db {
    driver="org.postgresql.Driver"

    url="jdbc:postgresql://localhost:5432/bitcoin-s-node-testnet3"
    user="bitcoin-s-node-admin"
  }
}

regTestDatabaseUrl {
  dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
  profile = "slick.jdbc.PostgresProfile$"
  db {
    driver="org.postgresql.Driver"

    url="jdbc:postgresql://localhost:5432/bitcoins-s-node-regtest"
    user="bitcoin-s-node-admin"
  }
}

unitTestDatabaseUrl {
  dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
  profile = "slick.jdbc.PostgresProfile$"
  db {
    driver="org.postgresql.Driver"
    url="jdbc:postgresql://localhost:5432/bitcoins-s-node-unit-test"
    user="bitcoin-s-node-admin"
    connectionPool = disabled
    keepAliveConnection = true

  }
}
