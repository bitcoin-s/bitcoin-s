<included>
    <!-- Stop output INFO at start -->
    <statusListener class="ch.qos.logback.core.status.NopStatusListener"/>


    <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <file>logs/application.log</file>
        <encoder>
            <!-- UTC ISO8601 date format -->
            <pattern>%date{"yyyy-MM-dd'T'HH:mm:ss,SSSXXX", UTC} %-5level %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} %level %logger{0} - %msg%n</pattern>
        </encoder>
    </appender>

    <root level="INFO">
        <appender-ref ref="FILE"/>
        <appender-ref ref="STDOUT"/>
    </root>

    <!-- ╔═══════════════════════╗ -->
    <!-- ║   Bitcoin-S logging   ║-->
    <!-- ╚═══════════════════════╝ -->

    <!-- ╔═══════════════════╗ -->
    <!-- ║   Configuration   ║ -->
    <!-- ╚═══════════════════╝ -->

    <!-- inspect resolved DB connection -->
    <logger name="org.bitcoins.db.SafeDatabase" level="INFO"/>

    <!-- inspect resolved config -->
    <logger name="org.bitcoins.chain.config" level="INFO"/>
    <logger name="org.bitcoins.node.config" level="INFO"/>
    <logger name="org.bitcoins.wallet.config" level="INFO"/>

    <!-- inspect table creation, etc -->
    <logger name="org.bitcoins.chain.db" level="INFO" />
    <logger name="org.bitcoins.node.db" level="INFO" />
    <logger name="org.bitcoins.wallet.db" level="INFO" />

    <!-- ╔═════════════════╗ -->
    <!-- ║   Node module   ║ -->
    <!-- ╚═════════════════╝ -->

    <!-- See incoming message names and the peer it's sent from -->
    <logger name="org.bitcoins.node.networking.peer.PeerMessageReceiver" level="INFO"/>

    <!-- See outgoing message names and the peer it's sent to -->
    <logger name="org.bitcoins.node.networking.peer.PeerMessageSender" level="INFO"/>

    <!-- Inspect handling of headers and inventory messages  -->
    <logger name="org.bitcoins.node.networking.peer.DataMessageHandler" level="INFO"/>

    <!-- inspect TCP details -->
    <logger name="org.bitcoins.node.networking.P2PClientActor" level="INFO"/>

    <!-- ╔════════════════════╗ -->
    <!-- ║   Chain module     ║ -->
    <!-- ╚════════════════════╝ -->

    <!-- See queries received by chain handler, as well as result of  -->
    <!-- connecting new block headers to chain -->
    <logger name="org.bitcoins.chain.blockchain.ChainHandler" level="INFO"/>

    <!-- Set to TRACE to inspect details of chain vaidation -->
    <logger name="org.bitcoins.chain.validation" level="INFO"/>

    <!-- ╔═════════════════════╗ -->
    <!-- ║   Wallet module     ║ -->
    <!-- ╚═════════════════════╝ -->

    <!-- ╔═══════════════════════════╗ -->
    <!-- ║   Bitcoin-S logging end   ║-->
    <!-- ╚═══════════════════════════╝ -->

    <!-- ╔═════════════════════════╗ -->
    <!-- ║   External libraries    ║ -->
    <!-- ╚═════════════════════════╝ -->

    <!-- see how long statements took to execute by setting to DEBUG -->
    <logger name="slick.jdbc.JdbcBackend.benchmark" level="INFO"/>

    <!-- see what statements are executed by setting to DEBUG -->
    <logger name="slick.jdbc.JdbcBackend.statement" level="INFO"/>

    <!-- see what slick is compiling to in sql -->
    <logger name="slick.compiler" level="INFO"/>

    <!-- see what's returned by Slick -->
    <logger name="slick.jdbc.StatementInvoker.result" level="INFO"/>

    <!-- Get rid of messages like this: 
    Connection attempt failed. Backing off new connection 
    attempts for at least 800 milliseconds. -->
    <logger name="akka.http.impl.engine.client.PoolGateway" level="OFF"/>

    <!-- get rid of "Slf4jLogger started" messages -->
    <logger name="akka.event.slf4j.Slf4jLogger" level="OFF"/>
</included>
